/* ==========================================================================
   Mixins
   ========================================================================== */

/*
   Clearfix
   ========================================================================== */

@define-mixin clearfix {
    &:after {
        content: "";
        display: block;
        clear: both;
    }
}


/*
   Pretty underlines üòç
   ========================================================================== */

/* Read more at: https://eager.io/blog/smarter-link-underlines */

/* stylelint-disable */
@define-mixin pretty-underline {
    background:
        linear-gradient($colour-white, $colour-white) 0 1.08em/.05em 1px no-repeat,
        linear-gradient($colour-white, $colour-white) 0 1.08em/.05em 1px no-repeat,
        linear-gradient(currentColor, currentColor) 0 1.08em/1px 1px repeat-x;
    text-shadow:
        .03em 0 $colour-white, -.03em 0 $colour-white,
        .06em 0 $colour-white, -.06em 0 $colour-white,
        .09em 0 $colour-white, -.09em 0 $colour-white,
        .12em 0 $colour-white, -.12em 0 $colour-white,
        .15em 0 $colour-white, -.15em 0 $colour-white;
    &:hover {
        background: transparent;
    }
}
/* stylelint-enable */

/*
   Image overlay
   ========================================================================== */

@define-mixin overlay-flat $z-index, $alpha {
    &:after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: $(z-index);
    }
}


/*
   Flex
   ========================================================================== */

@define-mixin flex-base $direction, $wrap {
    display: flex;
    flex-flow: $(direction) $(wrap);
}
@define-mixin flex-justify $justify {
    display: flex;
    justify-content: $(justify);
}
@define-mixin flex-align $align {
    display: flex;
    align-items: $(align);
}
@define-mixin flex-parent $direction, $wrap, $size, $direction-responsive, $wrap-responsive {
    flex-flow: $(direction) $(wrap);
    @media ($mq-$(size)-max) {
        flex-flow: $(direction-responsive) $(wrap-responsive);
    }
}
@define-mixin flex-child $size {
    flex: 1;
    @media ($mq-$(size)-max) {
        width: 100%;
    }
}

/*
   Centre layout responsive
   ========================================================================== */

@define-mixin max-width $size, $width, $align {
    @media ($mq-$(size)-max) {
        max-width: $grid-width-$(width);
        margin-left: auto;
        margin-right: auto;
        p, h1, h2, h3, h4, h5, h6 {
            text-align: $(align);
        }
    }
}

/*
   Object fit polyfill
   ========================================================================== */

@define-mixin object-fit $attr {
    object-fit: $(attr);
    font-family: "object-fit: $(attr)";
}

/*
   Object fit parent
   ========================================================================== */

@define-mixin object-fit-parent {
    height: 100%;
    width: 100%;
    position: relative;
}

/*
   Object fit image
   ========================================================================== */

@define-mixin object-fit-image {
    @mixin object-fit cover;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: block;
}

/*
   FOUT fix
   ========================================================================== */

@define-mixin fout-fix {
    .wf-loading & {
        visibility: hidden;
    }
}

/*
   Hide content
   ========================================================================== */

@define-mixin hide-content {
    position: absolute !important;
    height: 1px; width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
}


/*
   Font smoothing
   ========================================================================== */

@define-mixin font-smoothing {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}


/*
    No list style
   ========================================================================== */

@define-mixin list-style-none {
    list-style: none;
    padding-left: 0;
}

/*
   Center both
   ========================================================================== */

@define-mixin center-both {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

/*
   Consistent spacing
   ========================================================================== */

/**
 *
 * This mixin adds padding to an element using consistent base values to try
 * and normalize the spacing as the padding reduces towards mobile.
 *
 * Mind blown...
 */

@define-mixin padding $side, $modifier {
    @media ($mq-xs-max) {
        padding-$(side): calc(($margin-sm-base) * $modifier);
    }
    @media ($mq-sm-min) and ($mq-xl-max) {
        padding-$(side): calc($margin-md-base * $modifier);
    }
    @media ($mq-xxl-min) {
        padding-$(side): calc($margin-lg-base * $modifier);
    }
}

@define-mixin margin $side, $modifier {
    @media ($mq-xs-max) {
        margin-$(side): calc(($margin-sm-base) * $modifier);
    }
    @media ($mq-sm-min) and ($mq-xl-max) {
        margin-$(side): calc($margin-md-base * $modifier);
    }
    @media ($mq-xxl-min) {
        margin-$(side): calc($margin-lg-base * $modifier);
    }
}

@define-mixin mobile-gutter {
    @media (max-width: 360px) {
        padding-left: $grid-padding-sm;
        padding-right: $grid-padding-sm;
    }
    @media (min-width: 361px) {
        padding-left: $grid-padding;
        padding-right: $grid-padding;
    }
}
